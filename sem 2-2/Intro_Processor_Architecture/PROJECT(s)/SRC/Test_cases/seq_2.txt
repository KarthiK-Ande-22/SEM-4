0th instruction : 32'b0000000_00011_00000_010_00100_0100011; // sd x3, 4(x0)
1st instruction : 32'b0000000_00100_00000_010_00010_0000011; // ld x2, 4(x0)
2nd instruction : 32'b0000000_00101_01001_110_01000_0110011; // or x4, x0, 1
3rd instruction : 32'b000000000110_00000_000_00101_0010011; // addi x5, x0, 6
4th instruction : 32'b0000000_00001_00000_000_00100_0010011; // ld x3, x2, x3
5th instruction : 32'b0000000_00101_01001_110_01100_0110011; // or x4, x0, 1
6th instruction : 32'b000000000000_00000_000_00000_0000000; // nop
7th instruction : 32'b0000000_00010_00011_000_00100_1100011; // beq x2, x3, loop (branching example)
8th instruction : 32'b0100000_00101_00100_000_00101_0110011; // sub x5, x4, x5
9th instruction : 32'b0000000_00101_00000_010_01000_0100011; // sd x5, 8(x0)
10th instruction :32'b0000000_01000_00000_010_00110_0000011; // ld x6, 8(x0)
11th instruction :32'b0000000_00110_00110_111_00110_0110011; // and x6, x6, x6
12th instruction :32'b0000000_00110_00110_110_00111_0110011; // or x7, x6, x6
13th instruction :32'b0000000_00111_00111_100_01000_0110011; // xor x8, x7, x7
14th instruction :32'b0000000_01000_00000_010_01000_0100011; // sd x8, 12(x0)
15th instruction :32'b0000000_01001_00000_010_01001_0000011; // ld x9, 12(x0)
16th instruction :32'b0000000_01001_01001_001_01010_0110011; // sub x10, x9, x9
17th instruction :32'b0000000_01010_00000_010_01010_0100011; // sd x10, 16(x0)
18th instruction :32'b0000000_00011_00000_010_00100_0100011; // sd x3, x0, 2