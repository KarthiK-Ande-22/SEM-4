$date
	Tue Mar  4 21:10:41 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module forwarding_unit_tb $end
$var wire 2 ! forwardB [1:0] $end
$var wire 2 " forwardA [1:0] $end
$var reg 1 # ex_mem_Regwrite $end
$var reg 5 $ ex_mem_rd [4:0] $end
$var reg 5 % id_ex_Rs1 [4:0] $end
$var reg 5 & id_ex_Rs2 [4:0] $end
$var reg 1 ' mem_wb_Regwrite $end
$var reg 5 ( mem_wb_rd [4:0] $end
$scope module uut $end
$var wire 1 # ex_mem_Regwrite $end
$var wire 5 ) ex_mem_rd [4:0] $end
$var wire 5 * id_ex_Rs1 [4:0] $end
$var wire 5 + id_ex_Rs2 [4:0] $end
$var wire 1 ' mem_wb_Regwrite $end
$var wire 5 , mem_wb_rd [4:0] $end
$var reg 2 - forwardA [1:0] $end
$var reg 2 . forwardB [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
b0 -
b100 ,
b10 +
b1 *
b11 )
b100 (
0'
b10 &
b1 %
b11 $
0#
b0 "
b0 !
$end
#10000
b10 "
b10 -
1#
b1 $
b1 )
#20000
b10 !
b10 .
b0 "
b0 -
b10 $
b10 )
#30000
b1 "
b1 -
b0 !
b0 .
1'
b1 (
b1 ,
0#
b11 $
b11 )
#40000
b1 !
b1 .
b0 "
b0 -
b10 (
b10 ,
#50000
b10 "
b10 -
b0 !
b0 .
b1 (
b1 ,
1#
b1 $
b1 )
#60000
b0 "
b0 -
b0 (
b0 ,
b0 $
b0 )
b0 &
b0 +
b0 %
b0 *
#70000
b10 "
b10 -
0'
b110 (
b110 ,
b101 $
b101 )
b110 &
b110 +
b101 %
b101 *
#80000
b1 !
b1 .
b0 "
b0 -
1'
0#
#90000
