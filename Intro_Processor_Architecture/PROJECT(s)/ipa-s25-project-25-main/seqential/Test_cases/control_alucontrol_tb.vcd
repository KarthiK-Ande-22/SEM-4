$date
	Mon Mar  3 23:31:45 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module control_alucontrol_tb $end
$var wire 1 ! regwrite $end
$var wire 1 " memwrite $end
$var wire 1 # memtoreg $end
$var wire 1 $ memread $end
$var wire 1 % branch $end
$var wire 1 & alusrc $end
$var wire 2 ' ALUop [1:0] $end
$var wire 4 ( ALUctr [3:0] $end
$var reg 32 ) instruction [31:0] $end
$scope module dut $end
$var wire 32 * instruction [31:0] $end
$var wire 7 + opcode [6:0] $end
$var wire 1 , funct7 $end
$var wire 3 - funct3 [2:0] $end
$var reg 4 . ALUctr [3:0] $end
$var reg 2 / ALUop [1:0] $end
$var reg 1 & alusrc $end
$var reg 1 % branch $end
$var reg 1 $ memread $end
$var reg 1 # memtoreg $end
$var reg 1 " memwrite $end
$var reg 1 ! regwrite $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 /
b0 .
b0 -
0,
b110011 +
b110011 *
b110011 )
b0 (
b10 '
0&
0%
0$
0#
0"
1!
$end
#10000
b10000000000000000000000000110011 )
b10000000000000000000000000110011 *
#20000
1&
b0 '
b0 /
1#
1$
b11 +
b10 -
b10000000000011 )
b10000000000011 *
#30000
0!
1"
0#
0$
b100011 +
b10000000100011 )
b10000000100011 *
#40000
1!
0"
b10 '
b10 /
b10011 +
b0 -
b10011 )
b10011 *
#50000
b1 (
b1 .
0!
0&
b1 '
b1 /
1%
b1100011 +
b1100011 )
b1100011 *
#60000
b0 (
b0 .
b0 '
b0 /
0%
b1111111 +
b1111111 )
b1111111 *
#70000
